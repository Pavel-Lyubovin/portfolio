'''
D. Генерация скобочных последовательностей

Дано целое число n. Требуется вывести все правильные скобочные последовательности длины 2 ⋅ n, упорядоченные лексикографически (см. https://ru.wikipedia.org/wiki/Лексикографический_порядок).

В задаче используются только круглые скобки.

Желательно получить решение, которое работает за время, пропорциональное общему количеству правильных скобочных последовательностей в ответе, и при этом использует объём памяти, пропорциональный n.

Формат ввода
Единственная строка входного файла содержит целое число n, 0 ≤ n ≤ 11

Формат вывода
Выходной файл содержит сгенерированные правильные скобочные последовательности, упорядоченные лексикографически.

-------------
Simple input:

2

-------------
Simple output:

(())
()()
-------------
-------------
Simple input:

3

-------------
Simple output:

((()))
(()())
(())()
()(())
()()()
-------------
'''


def bracket_seq(n):
    cur = set()
    if n == 1:
        cur.add('()')
        return cur
    else:
        prev = bracket_seq(n-1)
        for el in prev:
            cur.add('(' + el + ')')
            cur.add(el + '()')
            cur.add('()' + el)
        return cur


n = int(input())
br_set = bracket_seq(n)
[print(el) for el in sorted(br_set)]
